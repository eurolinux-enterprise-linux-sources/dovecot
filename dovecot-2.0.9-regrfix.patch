fixes:0fc2d00f83df,5a3c87124066,3582271a897e,113b54dcb950,16ce45dbcb53,4741f1b4f9b3,7ecc5e10da57,42ca32299617,3a7cc0172fd,7ec1982fb275,d8179b523116,b71834419ea3
diff -up dovecot-2.0.9/src/auth/mech-winbind.c.snapfix dovecot-2.0.9/src/auth/mech-winbind.c
--- dovecot-2.0.9/src/auth/mech-winbind.c.snapfix	2010-06-12 01:02:33.000000000 +0200
+++ dovecot-2.0.9/src/auth/mech-winbind.c	2011-01-31 12:13:35.129629187 +0100
@@ -335,7 +335,7 @@ const struct mech_module mech_winbind_nt
 	.passdb_need = MECH_PASSDB_NEED_NOTHING,
 
 	mech_winbind_ntlm_auth_new,
-	mech_generic_auth_initial,
+	mech_winbind_auth_initial,
 	mech_winbind_auth_continue,
 	mech_generic_auth_free
 };
diff -up dovecot-2.0.9/src/dsync/dsync-data.c.snapfix dovecot-2.0.9/src/dsync/dsync-data.c
--- dovecot-2.0.9/src/dsync/dsync-data.c.snapfix	2010-06-12 01:02:33.000000000 +0200
+++ dovecot-2.0.9/src/dsync/dsync-data.c	2011-01-31 12:13:04.690463362 +0100
@@ -19,7 +19,9 @@ dsync_mailbox_dup(pool_t pool, const str
 
 	if (array_is_created(&box->cache_fields))
 		cache_fields = array_get(&box->cache_fields, &count);
-	if (count > 0) {
+	if (count == 0)
+		memset(&dest->cache_fields, 0, sizeof(dest->cache_fields));
+	else {
 		p_array_init(&dest->cache_fields, pool, count);
 		for (i = 0; i < count; i++) {
 			dup = p_strdup(pool, cache_fields[i]);
diff -up dovecot-2.0.9/src/imap/cmd-idle.c.snapfix dovecot-2.0.9/src/imap/cmd-idle.c
--- dovecot-2.0.9/src/imap/cmd-idle.c.snapfix	2010-12-30 10:42:54.000000000 +0100
+++ dovecot-2.0.9/src/imap/cmd-idle.c	2011-01-31 12:13:12.937508294 +0100
@@ -55,10 +55,26 @@ idle_finish(struct cmd_idle_context *ctx
 		client_command_free(&ctx->cmd);
 }
 
+static bool
+idle_client_handle_input(struct cmd_idle_context *ctx, bool free_cmd)
+{
+	const char *line;
+
+	while ((line = i_stream_next_line(ctx->client->input)) != NULL) {
+		if (ctx->client->input_skip_line)
+			ctx->client->input_skip_line = FALSE;
+		else {
+			idle_finish(ctx, strcasecmp(line, "DONE") == 0,
+				    free_cmd);
+			return TRUE;
+		}
+	}
+	return FALSE;
+}
+
 static void idle_client_input_more(struct cmd_idle_context *ctx)
 {
 	struct client *client = ctx->client;
-	char *line;
 
 	client->last_input = ioloop_time;
 	timeout_reset(client->to_idle);
@@ -82,15 +98,9 @@ static void idle_client_input_more(struc
 		return;
 	}
 
-	while ((line = i_stream_next_line(client->input)) != NULL) {
-		if (client->input_skip_line)
-			client->input_skip_line = FALSE;
-		else {
-			idle_finish(ctx, strcasecmp(line, "DONE") == 0, TRUE);
-			if (!client->disconnected)
-				client_continue_pending_input(client);
-			break;
-		}
+	if (idle_client_handle_input(ctx, TRUE)) {
+		if (!client->disconnected)
+			client_continue_pending_input(client);
 	}
 }
 
@@ -264,6 +274,5 @@ bool cmd_idle(struct client_command_cont
 	   added mailbox-notifier, we wouldn't see them otherwise. */
 	if (client->mailbox != NULL)
 		idle_sync_now(client->mailbox, ctx);
-	idle_client_input_more(ctx);
-	return FALSE;
+	return idle_client_handle_input(ctx, FALSE);
 }
diff -up dovecot-2.0.9/src/lib/file-dotlock.c.snapfix dovecot-2.0.9/src/lib/file-dotlock.c
--- dovecot-2.0.9/src/lib/file-dotlock.c.snapfix	2011-01-31 12:12:53.283401217 +0100
+++ dovecot-2.0.9/src/lib/file-dotlock.c	2011-01-31 12:12:59.075432774 +0100
@@ -316,11 +316,12 @@ static int file_write_pid(int fd, const 
 }
 
 static int try_create_lock_hardlink(struct lock_info *lock_info, bool write_pid,
-				    string_t *tmp_path)
+				    string_t *tmp_path, time_t now)
 {
 	const char *temp_prefix = lock_info->set->temp_prefix;
 	const char *p;
 	mode_t old_mask;
+	struct stat st;
 
 	if (lock_info->temp_path == NULL) {
 		/* we'll need our temp file first. */
@@ -366,6 +367,14 @@ static int try_create_lock_hardlink(stru
 		}
 
                 lock_info->temp_path = str_c(tmp_path);
+	} else if (fstat(lock_info->fd, &st) < 0) {
+		i_error("fstat(%s) failed: %m", lock_info->temp_path);
+		return -1;
+	} else if (st.st_ctime < now) {
+		/* we've been waiting for a while.
+		   refresh the file's timestamp. */
+		if (utime(lock_info->temp_path, NULL) < 0)
+			i_error("utime(%s) failed: %m", lock_info->temp_path);
 	}
 
 	if (nfs_safe_link(lock_info->temp_path,
@@ -506,6 +506,7 @@
 				lock_info.wait_usecs += lock_info.wait_usecs/2;
 			}
 			dotlock_wait(&lock_info);
+			now = time(NULL);
 		}
 
 		ret = check_lock(now, &lock_info);
@@ -520,7 +530,7 @@ dotlock_create(struct dotlock *dotlock, 
 			ret = set->use_excl_lock ?
 				try_create_lock_excl(&lock_info, write_pid) :
 				try_create_lock_hardlink(&lock_info, write_pid,
-							 tmp_path);
+							 tmp_path, now);
 			if (ret != 0)
 				break;
 		}
diff -up dovecot-2.0.9/src/lib-index/mail-index.c.snapfix dovecot-2.0.9/src/lib-index/mail-index.c
--- dovecot-2.0.9/src/lib-index/mail-index.c.snapfix	2010-12-30 10:42:54.000000000 +0100
+++ dovecot-2.0.9/src/lib-index/mail-index.c	2011-01-31 12:13:19.962546558 +0100
@@ -423,8 +423,19 @@ int mail_index_create_tmp_file(struct ma
 
 	path = *path_r = t_strconcat(index->filepath, ".tmp", NULL);
 	old_mask = umask(0);
-	fd = open(path, O_RDWR|O_CREAT|O_TRUNC, index->mode);
+	fd = open(path, O_RDWR|O_CREAT|O_EXCL, index->mode);
 	umask(old_mask);
+	if (fd == -1 && errno == EEXIST) {
+		/* stale temp file. unlink and recreate rather than overwriting,
+		   just to make sure locking problems won't cause corruption */
+		if (unlink(path) < 0) {
+			i_error("unlink(%s) failed: %m", path);
+			return -1;
+		}
+		old_mask = umask(0);
+		fd = open(path, O_RDWR|O_CREAT|O_EXCL, index->mode);
+		umask(old_mask);
+	}
 	if (fd == -1) {
 		mail_index_file_set_syscall_error(index, path, "creat()");
 		return -1;
diff -up dovecot-2.0.9/src/lib/ioloop.c.snapfix dovecot-2.0.9/src/lib/ioloop.c
--- dovecot-2.0.9/src/lib/ioloop.c.snapfix	2010-12-30 10:42:54.000000000 +0100
+++ dovecot-2.0.9/src/lib/ioloop.c	2011-01-31 12:13:09.562489912 +0100
@@ -252,11 +252,12 @@ int io_loop_get_wait_time(struct ioloop 
 	item = priorityq_peek(ioloop->timeouts);
 	timeout = (struct timeout *)item;
 	if (timeout == NULL) {
-		/* no timeouts. give it INT_MAX msecs. */
+		/* no timeouts. use INT_MAX msecs for timeval and
+		   return -1 for poll/epoll infinity. */
 		tv_r->tv_sec = INT_MAX / 1000;
 		tv_r->tv_usec = 0;
 		ioloop->next_max_time = (1ULL << (TIME_T_MAX_BITS-1)) - 1;
-		return INT_MAX;
+		return -1;
 	}
 
 	tv_now.tv_sec = 0;
diff -up dovecot-2.0.9/src/lib-storage/index/dbox-common/dbox-storage.c.snapfix dovecot-2.0.9/src/lib-storage/index/dbox-common/dbox-storage.c
--- dovecot-2.0.9/src/lib-storage/index/dbox-common/dbox-storage.c.snapfix	2010-12-30 10:42:54.000000000 +0100
+++ dovecot-2.0.9/src/lib-storage/index/dbox-common/dbox-storage.c	2011-01-31 12:13:23.418565391 +0100
@@ -176,7 +176,7 @@ int dbox_mailbox_create(struct mailbox *
 	    (box->list->props & MAILBOX_LIST_PROP_NO_NOSELECT) == 0)
 		return 0;
 
-	if (index_storage_mailbox_open(box, FALSE) < 0)
+	if (mailbox_open(box) < 0)
 		return -1;
 
 	/* if alt path already exists and contains files, rebuild storage so
diff -up dovecot-2.0.9/src/lib-storage/index/dbox-multi/mdbox-storage.c.snapfix dovecot-2.0.9/src/lib-storage/index/dbox-multi/mdbox-storage.c
--- dovecot-2.0.9/src/lib-storage/index/dbox-multi/mdbox-storage.c.snapfix	2010-12-30 10:42:54.000000000 +0100
+++ dovecot-2.0.9/src/lib-storage/index/dbox-multi/mdbox-storage.c	2011-01-31 12:13:23.418565392 +0100
@@ -316,7 +316,7 @@ static int
 mdbox_mailbox_update(struct mailbox *box, const struct mailbox_update *update)
 {
 	if (!box->opened) {
-		if (index_storage_mailbox_open(box, FALSE) < 0)
+		if (mailbox_open(box) < 0)
 			return -1;
 	}
 	if (update->cache_fields != NULL)
diff -up dovecot-2.0.9/src/lib-storage/index/dbox-single/sdbox-storage.c.snapfix dovecot-2.0.9/src/lib-storage/index/dbox-single/sdbox-storage.c
--- dovecot-2.0.9/src/lib-storage/index/dbox-single/sdbox-storage.c.snapfix	2010-12-30 10:42:54.000000000 +0100
+++ dovecot-2.0.9/src/lib-storage/index/dbox-single/sdbox-storage.c	2011-01-31 12:13:23.419565397 +0100
@@ -319,7 +319,7 @@ static int
 dbox_mailbox_update(struct mailbox *box, const struct mailbox_update *update)
 {
 	if (!box->opened) {
-		if (index_storage_mailbox_open(box, FALSE) < 0)
+		if (mailbox_open(box) < 0)
 			return -1;
 	}
 	if (update->cache_fields != NULL)
diff -up dovecot-2.0.9/src/lib-storage/mail-storage-service.c.snapfix dovecot-2.0.9/src/lib-storage/mail-storage-service.c
--- dovecot-2.0.9/src/lib-storage/mail-storage-service.c.snapfix	2010-12-30 10:42:54.000000000 +0100
+++ dovecot-2.0.9/src/lib-storage/mail-storage-service.c	2011-01-31 12:12:43.459347687 +0100
@@ -891,8 +891,12 @@ int mail_storage_service_next(struct mai
 	} else if (len > 0 && temp_priv_drop) {
 		/* we're dropping privileges only temporarily, so we can't
 		   chroot. fix home directory so we can access it. */
-		set_keyval(ctx, user, "mail_home",
-			   t_strconcat(chroot, "/", home, NULL));
+		if (*home == '\0' || strcmp(home, "/") == 0)
+			home = chroot;
+		else
+			home = t_strconcat(chroot, home, NULL);
+		chroot = "";
+		set_keyval(ctx, user, "mail_home", home);
 	}
 
 	if ((ctx->flags & MAIL_STORAGE_SERVICE_FLAG_NO_LOG_INIT) == 0)
diff -up dovecot-2.0.9/src/lmtp/commands.c.snapfix dovecot-2.0.9/src/lmtp/commands.c
--- dovecot-2.0.9/src/lmtp/commands.c.snapfix	2011-01-03 17:54:52.000000000 +0100
+++ dovecot-2.0.9/src/lmtp/commands.c	2011-01-31 12:13:27.818589360 +0100
@@ -699,20 +699,18 @@ static void client_proxy_finish(bool tim
 static const char *client_get_added_headers(struct client *client)
 {
 	string_t *str = t_str_new(200);
-	const char *host, *address = NULL, *username = NULL;
+	const char *host, *rcpt_to = NULL;
 
 	if (array_count(&client->state.rcpt_to) == 1) {
 		const struct mail_recipient *rcpt =
 			array_idx(&client->state.rcpt_to, 0);
-		const char *detail;
 
-		address = rcpt->address;
-		rcpt_address_parse(client, address, &username, &detail);
+		rcpt_to = rcpt->address;
 	}
 
 	str_printfa(str, "Return-Path: <%s>\r\n", client->state.mail_from);
-	if (username != NULL)
-		str_printfa(str, "Delivered-To: <%s>\r\n", username);
+	if (rcpt_to != NULL)
+		str_printfa(str, "Delivered-To: <%s>\r\n", rcpt_to);
 
 	str_printfa(str, "Received: from %s", client->state.lhlo);
 	if ((host = net_ip2addr(&client->remote_ip)) != NULL)
@@ -721,8 +719,8 @@ static const char *client_get_added_head
 		    client->my_domain, client->state.session_id);
 
 	str_append(str, "\r\n\t");
-	if (address != NULL)
-		str_printfa(str, "for <%s>", address);
+	if (rcpt_to != NULL)
+		str_printfa(str, "for <%s>", rcpt_to);
 	str_printfa(str, "; %s\r\n", message_date_create(ioloop_time));
 	return str_c(str);
 }
diff -up dovecot-2.0.9/src/plugins/zlib/ostream-zlib.c.snapfix dovecot-2.0.9/src/plugins/zlib/ostream-zlib.c
--- dovecot-2.0.9/src/plugins/zlib/ostream-zlib.c.snapfix	2010-12-30 10:42:54.000000000 +0100
+++ dovecot-2.0.9/src/plugins/zlib/ostream-zlib.c	2011-01-31 12:13:39.970655505 +0100
@@ -129,7 +129,8 @@ o_stream_zlib_send_chunk(struct zlib_ost
 	}
 	zstream->crc = crc32_data_more(zstream->crc, data, size);
 	zstream->bytes32 += size;
-	zstream->flushed = FALSE;
+	zstream->flushed = flush == Z_SYNC_FLUSH &&
+		zs->avail_out == sizeof(zstream->outbuf);
 	return 0;
 }
 
@@ -222,8 +223,12 @@ o_stream_zlib_sendv(struct ostream_priva
 			return -1;
 		bytes += iov[i].iov_len;
 	}
-
 	stream->ostream.offset += bytes;
+
+	if (!zstream->ostream.corked) {
+		if (o_stream_zlib_send_flush(zstream) < 0)
+			return -1;
+	}
 	return bytes;
 }
 
diff -up dovecot-2.0.9/src/util/script.c.snapfix dovecot-2.0.9/src/util/script.c
--- dovecot-2.0.9/src/util/script.c.snapfix	2010-06-12 01:02:34.000000000 +0200
+++ dovecot-2.0.9/src/util/script.c	2011-01-31 12:13:31.642610200 +0100
@@ -5,6 +5,7 @@
 #include "str.h"
 #include "env-util.h"
 #include "execv-const.h"
+#include "restrict-access.h"
 #include "master-interface.h"
 #include "master-service.h"
 
@@ -102,6 +103,9 @@ int main(int argc, char *argv[])
 	argv += optind;
 
 	master_service_init_log(master_service, "script: ");
+	restrict_access_by_env(NULL, FALSE);
+	restrict_access_allow_coredumps(TRUE);
+
 	master_service_init_finish(master_service);
 	master_service_set_service_count(master_service, 1);
 
